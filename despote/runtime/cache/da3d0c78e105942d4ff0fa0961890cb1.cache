a:6:{s:3:"aid";i:20;s:5:"title";s:53:"JS Unicode 编码引发的字符串长度计算问题";s:8:"category";s:12:"前端设计";s:4:"date";s:10:"2018-02-25";s:7:"content";s:2700:"<h1>一. 问题重现</h1>
<p>在 JS 中计算 <code>zRvEx±¯Wë&gt;ô¯ Ø»?ÿ*Âm|i</code>ãIUvX\³0` 这个字符串的长度的时候（str.length），结果为 38，而在 PHP 中计算这个字符串的长度（mb_strlen(str)），则是 39，多出了 1</p>
<h1>二. 深入研究</h1>
<h2>1. 追本溯源</h2>
<p>这串字符串出现的原因来源于一段加密程序，在加密程序末尾需要加上长度作为签名的一部分，加密的时候是对字符取 ASCII 编码，然后加密编码后再转回字符串，由于加密的定界问题，将 ASCII 的值放在了 0-255，即包含了 ASCII 扩展部分</p>
<h2>2. 问题排查</h2>
<p>借助另一门语言：C#，进行字符串长度的验证，发现结果和 PHP 是一样的，也就是说，应该是 JS 解析出现了问题，查看了下 JS 的取 ASCII 函数以及 PHP 的取 ASCII 函数，JS 的手册写的是这样的：</p>
<pre><code class="language-js">charCodeAt() 方法可返回指定位置的字符的 Unicode 编码。这个返回值是 0 - 65535 之间的整数。</code></pre>
<p>而 PHP 中取的是 UTF8（函数参考：<a href="http://php.net/manual/zh/function.ord.php#109812">PHP 文档</a>），所以感觉应该是 Unicode 和 UTF8 之间出了问题</p>
<h2>3. 验证猜想</h2>
<p>参考阮一峰大大的：《<a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html">字符编码笔记：ASCII，Unicode 和 UTF-8</a>》，发现 Unicode 和 UTF8 之间还是有些差距，并不能完全等同，所以开始逐个字符取 ASCII 进行比对，发现 JS 取的 ASCII 和 PHP 取的 ASCII 是一致的，也就是说并不是因为 Unicode 和 UTF8 的问题</p>
<h2>4. 分析字符串</h2>
<p>JS 取长度比 PHP 等语言缺少了 1，那在相同字符的情况下，会出现缺少一个字符的情况，在排除了编码问题之后，我能想到的也就只有转义了，刚好缺的那串字符串中就有转义字符，于是开始测试，JS 中：<code>"\Â".length</code> 的值为 1，而 PHP 中，该字符串的值为 2，验证猜想，就是转义字符串的问题</p>
<h2>5. 问题解决</h2>
<p>在进行足够多的测试的时候，发现只要是 ASCII 大于 127，也就是 ASCII 扩展部分，均会出现转义的现象，导致了字符数不相同，在 PHP 中将所有的 <code>'\'</code> 去除（除了行首和行尾），即可得到需要的字符串长度了</p>
<h1>三. 总结</h1>
<p>不得不承认不同语言代码移植确实很艰难，原本看似简单的算法移植，到了 PHP 中就出现了各种各样的问题，最后虽然得到了解决，但是花费的时间精力太大了...</p>";s:11:"comment_num";i:0;}